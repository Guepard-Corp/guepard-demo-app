// backend/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Category {
  id          String    @id @default(uuid()) @db.Uuid
  name        String    @unique @db.VarChar(100)
  slug        String    @unique @db.VarChar(100)
  description String?
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  products    Product[]
}

model Product {
  id          String    @id @default(uuid()) @db.Uuid
  name        String    @db.VarChar(255)
  description String
  price       Decimal   @db.Decimal(10, 2)
  discountPrice Decimal?  @map("discount_price") @db.Decimal(10, 2) 
  stock       Int       @default(0)
  imageUrl    String?   @map("image_url")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  category    Category  @relation(fields: [categoryId], references: [id], onDelete: Restrict)
  categoryId  String    @map("category_id") @db.Uuid
  orderItems  OrderItem[]
}

model Order {
  id          String    @id @default(uuid()) @db.Uuid
  // userId      String?   @map("user_id") @db.Uuid // We'll keep this commented for now
  clientName    String    @map("client_name")
  clientPhone   String    @map("client_phone")
  clientAddress String    @map("client_address")
  
  totalAmount Decimal   @map("total_amount") @db.Decimal(10, 2)
  status      String    @default("pending") @db.VarChar(50)
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  orderItems  OrderItem[]
}

model OrderItem {
  id          String    @id @default(uuid()) @db.Uuid
  order       Order     @relation(fields: [orderId], references: [id])
  orderId     String    @map("order_id") @db.Uuid
  product     Product   @relation(fields: [productId], references: [id])
  productId   String    @map("product_id") @db.Uuid
  quantity    Int
  priceAtTime Decimal   @map("price_at_time") @db.Decimal(10, 2)
  createdAt   DateTime  @default(now()) @map("created_at")

  @@map("order_items")
}
